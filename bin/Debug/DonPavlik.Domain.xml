<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DonPavlik.Domain</name>
    </assembly>
    <members>
        <member name="T:DonPavlik.Domain.Attributes.RegularExpressionAttribute">
            <summary>
            Regular expression attribute class definition
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Attributes.RegularExpressionAttribute.#ctor(System.String)">
            <summary>
            Initializes an instance of the Regular expression attribute
            class
            </summary>
            <param name="pattern">regular expression pattern</param>
        </member>
        <member name="M:DonPavlik.Domain.Attributes.RegularExpressionAttribute.OnSetValue(PostSharp.Aspects.LocationInterceptionArgs)">
            <summary>
            Method intercepting all changes on field, making sure that the
            setting value matches the regular expression
            </summary>
            <param name="locationInterceptionArgs">Location Interception Arguments</param>
        </member>
        <member name="P:DonPavlik.Domain.Attributes.RegularExpressionAttribute.Pattern">
            <summary>
            Gets the pattern for this regular expression attribute
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Enumerations.TransactionTypes">
            <summary>
            Transaction type definition
            </summary>
        </member>
        <member name="F:DonPavlik.Domain.Enumerations.TransactionTypes.Withdrawal">
            <summary>
            Transaction type of withdrawal, subtraction
            </summary>
        </member>
        <member name="F:DonPavlik.Domain.Enumerations.TransactionTypes.Desposit">
            <summary>
            Transaction type of Deposit, addition
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IAddress.Street">
            <summary>
            Gets or sets the street for the Address
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IAddress.City">
            <summary>
            Gets or sets the city for the Address
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IAddress.State">
            <summary>
            Gets or sets the state for the Address
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IAddress.Zip">
            <summary>
            Gets or sets the Zip for the address
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Interfaces.IAnthroponym">
            <summary>
            Anthroponym interface for dealing with a persons name
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IAnthroponym.FullName">
            <summary>
            Gets the full name
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IAnthroponym.Given">
            <summary>
            Gets or sets the Given name, also known as first name
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IAnthroponym.Middle">
            <summary>
            Gets or sets the Middle name
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IAnthroponym.Surname">
            <summary>
            Gets or sets the Surname, also known as last name
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IAnthroponym.Suffix">
            <summary>
            Gets or sets the suffix
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IAnthroponym.Prefix">
            <summary>
            Gets or sets the prefix
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IMessage.Body">
            <summary>
            Gets or sets the message body
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IMessage.Subject">
            <summary>
            Gets or sets the subject of the message
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IMessage.Sent">
            <summary>
            Gets or sets the sent date time of the message
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IMessage.From">
            <summary>
            Gets or sets the Originator of the message. The 
            person who sent the message.
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IMessage.Tos">
            <summary>
            Gets the collection of tos for the message.
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IMessage.Ccs">
            <summary>
            Gets the collection of Ccs for the message.
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IMessage.Bccs">
            <summary>
            Gets the collection of Bccs for the message
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IOrganization.Address">
            <summary>
             Gets or sets the address for the organization.
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IOrganization.Name">
            <summary>
             Gets or sets the name of the organization
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IOrganization.Members">
            <summary>
             Gets the collection of Members that belong to the organization
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Interfaces.IPage">
            <summary>
            Defines the Page Interface
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IPage.FilePath">
            <summary>
            Gets or sets the file path for the page
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IPage.Lines">
            <summary>
            Gets a collection of lines in a file
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IPage.MetaData">
            <summary>
            Gets the Metadata defined for a file
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IPage.Name">
            <summary>
            Gets or sets the name of the page
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Interfaces.IPerson">
            <summary>
            Person interface for dealing with people
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IPerson.DateOfDeath">
            <summary>
            Gets or sets the Date of Death
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IPerson.DateOfBirth">
            <summary>
            Gets or sets the date of birth
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IPerson.Gender">
            <summary>
            Gets or sets the Gender for the person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IPerson.PrimaryName">
            <summary>
            Gets the Primary name of the person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IPerson.Aliases">
            <summary>
            Gest the List of name aliases for a person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IPerson.TimeLine">
            <summary>
            Gets the time line for this person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IPerson.Address">
            <summary>
            Gets or sets the Address for the person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IPerson.Image">
            <summary>
            Gets or sets the image for this person
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Interfaces.IProject">
            <summary>
            Project Interface definition for dealing with projects
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IProject.Name">
            <summary>
            Gets or sets the name of the project
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Interfaces.ITask">
            <summary>
            Task Interface definition for dealing with tasks
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.ITask.Flagged">
            <summary>
            Gets or sets a value that indecates if the task has been
            flagged
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.ITask.IsCompleted">
            <summary>
            Gets or sets whether a task is completed
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.ITask.Note">
            <summary>
            Gets or sets the note on the task
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.ITask.Project">
            <summary>
            Gets or sets the project that this task belongs to
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.ITask.Summary">
            <summary>
            Gets or sets the summary for this task
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.ITask.TaskDescription">
            <summary>
            Gets the description of the task that has been identified to be completed.
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.ITask.Tasks">
            <summary>
            Gets the list of sub tasks for this task
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Interfaces.ITimeLine">
            <summary>
            Interface for Time Line Definition
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.ITimeLine.Entries">
            <summary>
            Gets the collection of entries for the time line
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.ITimeLineEntry.Title">
            <summary>
            Gets or sets the title of the time line entry
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.ITimeLineEntry.DateTime">
            <summary>
            Gets or sets the date time of the time line entry
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.ITimeLineEntry.Entry">
            <summary>
            Gets the entry of the time line entry as a collection of lines
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.ITransaction.Description">
            <summary>
            Gets or sets the description of the 
            transaction
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.ITransaction.Amount">
            <summary>
            Gets or sets the amount of the transaction
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.ITransaction.Date">
            <summary>
            Gets or set the date of the transaction
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.ITransaction.TransactionType">
            <summary>
            Gets or sets the transaction type of the 
            transaction
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.ITransaction.Tags">
            <summary>
            Gets the collection of tags that are on the 
            transaction
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.ITransaction.Account">
            <summary>
            Gets or sets the account for this transaction
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Interfaces.Roles.IContact">
            <summary>
            Contact interface definition
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.Roles.IContact.Email">
            <summary>
            Gets or sets the email for the contact
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Model.Account">
            <summary>
            Account class definition for dealing with Finacial accounts
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Interfaces.IAccount">
            <summary>
            Defines the interface for Account
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Interfaces.IAccount.CalculateBalance">
            <summary>
            Calculates the balance for the account by going through the
            collection of transactions then sets the Balance of the account
            and finaly returns the balance.
            </summary>
            <returns>Returns the balance calculated</returns>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IAccount.Balance">
            <summary>
            Gets the balance for this account
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IAccount.Name">
            <summary>
            Gets or sets the name of the account
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.IAccount.Transactions">
            <summary>
            Gets the collection of transactions for this account
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Model.Account.#ctor">
            <summary>
            Initializes an instance of the Account Class
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Model.Account.CalculateBalance">
            <summary>
            Calculates the balance for the account by going through the
            collection of transactions then sets the Balance of the account
            and finaly returns the balance.
            </summary>
            <returns>Returns the balance calculated</returns>
        </member>
        <member name="P:DonPavlik.Domain.Model.Account.Name">
            <summary>
            Gets or sets the name of the account
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Account.Transactions">
            <summary>
            Gets the collection of transactions for this account
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Account.Balance">
            <summary>
            Gets the balance for this account
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Model.Address">
            <summary>
            Address Class definition
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Model.Address.#ctor">
            <summary>
            Initializes an instance of Address class
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Model.Address.#ctor(System.String)">
            <summary>
            Initializes an instance of Address class with the string address provided
            </summary>
            <param name="address"></param>
        </member>
        <member name="P:DonPavlik.Domain.Model.Address.Street">
            <summary>
            Gets or sets the street for the Address
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Address.City">
            <summary>
            Gets or sets the city for the Address
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Address.State">
            <summary>
            Gets or sets the state for the Address
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Address.Zip">
            <summary>
            Gets or sets the Zip for the address
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Model.Anthroponym">
            <summary>
            Anthroponym class for dealing with a persons name, inherits from IAnthroponym
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Model.Anthroponym.#ctor">
            <summary>
            Initializes a new instance of Anthroponym Class
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Anthroponym.FullName">
            <summary>
            Gets the full name of the Anthroponym
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Anthroponym.Given">
            <summary>
            Gets or sets the Given name of the Anthroponym, also
            known as the first name of a person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Anthroponym.Middle">
            <summary>
            Gets or sets the Middle name of the Anthroponym
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Anthroponym.Surname">
            <summary>
            Gets or sets the Surname of the Anthroponym
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Anthroponym.Suffix">
            <summary>
            Gets or sets the Suffix of the Anthroponym
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Anthroponym.Prefix">
            <summary>
            Gets or sets the Prefix of the Anthroponym
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Interfaces.ILine">
            <summary>
            Interface definition for Line
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Interfaces.ILine.ToString">
            <summary>
            Returns the string value of the Line
            </summary>
            <returns>Return Literal Value</returns>
        </member>
        <member name="P:DonPavlik.Domain.Interfaces.ILine.LiteralValue">
            <summary>
            Gets or sets the literal value for the line
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Model.Line">
            <summary>
            Class definition for Line
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Model.Line.#ctor">
            <summary>
            Initializes an instance of Line
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Model.Line.ToString">
            <summary>
            Returns the string value of the Line
            </summary>
            <returns>Return Literal Value</returns>
        </member>
        <member name="P:DonPavlik.Domain.Model.Line.LiteralValue">
            <summary>
            Gets or sets the literal value for the line
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Model.Message">
            <summary>
            Message Class definition for working with Messages
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Model.Message.#ctor">
            <summary>
            Initializes an instance of the Message class
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Message.Body">
            <summary>
            Gets or sets the message body
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Message.Subject">
            <summary>
            Gets or sets the subject of the message
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Message.Sent">
            <summary>
            Gets or sets the sent date time of the message
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Message.From">
            <summary>
            Gets or sets the Originator of the message. The 
            person who sent the message.
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Message.Tos">
            <summary>
            Gets the collection of tos for the message.
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Message.Ccs">
            <summary>
            Gets the collection of Ccs for the message.
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Message.Bccs">
            <summary>
            Gets the collection of Bccs for the message
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Model.Organization">
            <summary>
             Organization class definition for dealing with organizations and it's relationships
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Model.Organization.#ctor">
            <summary>
             Initializes a new instance of the organization class
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Organization.Address">
            <summary>
             Gets or sets the address for the organization.
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Organization.Name">
            <summary>
             Gets or sets the name of the organization
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Organization.Members">
            <summary>
             Gets the collection of Members that belong to the organization
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Model.Page">
            <summary>
            Page class definition that represents a file
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Model.Page.#ctor">
            <summary>
            Creates an instance of a Page.
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Page.Lines">
            <summary>
            Gets a collection of lines in a file
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Page.MetaData">
            <summary>
            Gets the Metadata defined for a file
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Page.Name">
            <summary>
            Gets or sets the name of the page
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Page.FilePath">
            <summary>
            Gets or sets the file path for the page
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Model.Person">
            <summary>
            Person class for dealing with people
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Model.Person.#ctor">
            <summary>
            Initializes an instance of the Person Class
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Person.DateOfBirth">
            <summary>
            Gets or sets the Date of Birth for the person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Person.DateOfDeath">
            <summary>
            Gets or sets the Date of death for the person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Person.Gender">
            <summary>
            Gets or sets the gender of the person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Person.PrimaryName">
            <summary>
            Gets the Primary name of the person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Person.Aliases">
            <summary>
            Gets the list of Aliases for the person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Person.TimeLine">
            <summary>
            Gets the time line for this person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Person.Address">
            <summary>
            Gets or sets the Address for the person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Person.Image">
            <summary>
            Gets or sets the image for this person
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Model.Project">
            <summary>
            Project class definition
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Model.Project.#ctor">
            <summary>
            Instanciates an instance of the Project class.
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Project.Name">
            <summary>
            Gets and sets the name of the project
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Model.Roles.Contact">
            <summary>
            Contact class definition that defines the 
            contact role.
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Model.Roles.PersonRole">
            <summary>
            Person Role Class definition for the Roles Decoratore
            </summary>
        </member>
        <member name="F:DonPavlik.Domain.Model.Roles.PersonRole._person">
            <summary>
            Protected reference to person that is being decorated
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Model.Roles.PersonRole.#ctor(DonPavlik.Domain.Interfaces.IPerson)">
            <summary>
            Initializes an instance of Person Role, for the person
            that is being passed in.
            </summary>
            <param name="person">Person that is to be decorated</param>
        </member>
        <member name="P:DonPavlik.Domain.Model.Roles.PersonRole.DateOfDeath">
            <summary>
            Gets or sets the Death date for the person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Roles.PersonRole.DateOfBirth">
            <summary>
            Gets or sets the Birth date of the person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Roles.PersonRole.Gender">
            <summary>
            Gets or sets the gender for the person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Roles.PersonRole.PrimaryName">
            <summary>
            Gets the primary name for the person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Roles.PersonRole.Aliases">
            <summary>
            Gets the collection of Aliases for the person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Roles.PersonRole.TimeLine">
            <summary>
            Gets the time line for the person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Roles.PersonRole.Address">
            <summary>
            Gets or sets the address for a person
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Roles.PersonRole.Image">
            <summary>
            Gets or sets the image for this contact
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Model.Roles.Contact.#ctor(DonPavlik.Domain.Interfaces.IPerson)">
            <summary>
            Initializes a new instance of the Contact Role
            </summary>
            <param name="person">Person that is be given contact role</param>
        </member>
        <member name="P:DonPavlik.Domain.Model.Roles.Contact.Email">
            <summary>
            Gets or sets the email for the contact
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Model.TimeLine">
            <summary>
            Time Line Class definition for working with Time Lines
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Model.TimeLine.#ctor">
            <summary>
            Initializes a new instance of the TimeLine Class
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.TimeLine.Entries">
            <summary>
            Gets the collection of entries for the time line
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Model.TimeLineEntry">
            <summary>
            Time Line Entry class definition for defining time line entries
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Model.TimeLineEntry.#ctor">
            <summary>
            Initializes an instance of TimeLineEntry Class
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.TimeLineEntry.Title">
            <summary>
            Gets or sets the title of the time line entry
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.TimeLineEntry.DateTime">
            <summary>
            Gets or sets the date time of the time line entry
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.TimeLineEntry.Entry">
            <summary>
            Gets the entry of the time line entry as a collection of lines
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Model.Transaction">
            <summary>
            Transaction class definition
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Model.Transaction.#ctor">
            <summary>
            Initializes an instance of the transaction
            class
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Transaction.Description">
            <summary>
            Gets or sets the description of the 
            transaction
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Transaction.Amount">
            <summary>
            Gets or sets the amount of the transaction
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Transaction.Date">
            <summary>
            Gets or set the date of the transaction
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Transaction.TransactionType">
            <summary>
            Gets or sets the transaction type of the 
            transaction
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Transaction.Tags">
            <summary>
            Gets the collection of tags that are on the 
            transaction
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Transaction.Account">
            <summary>
            Gets or sets the account for this transaction
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.Model.Task">
            <summary>
            Task definition for dealing with tasks
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Model.Task.#ctor">
            <summary>
            Intializes an instance of Task Class
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.Model.Task.#ctor(System.String)">
            <summary>
            Intializes an instance of Task Class
            </summary>
            <param name="task"></param>
        </member>
        <member name="P:DonPavlik.Domain.Model.Task.Flagged">
            <summary>
            Gets or sets a value that indecates if the task has been
            flagged
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Task.HasAction">
            <summary>
            Gets a value indicating whether a task has children tasks
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Task.IsCompleted">
            <summary>
            Gets or sets whether a task is completed
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Task.Note">
            <summary>
            Gets or sets the note on the task
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Task.Summary">
            <summary>
            Gets or sets the summary for this task
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Task.TaskDescription">
            <summary>
            Gets the description of the task that has been identified to 
            be completed.
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Task.Project">
            <summary>
            Gets or sets the project that this task belongs to
            </summary>
        </member>
        <member name="P:DonPavlik.Domain.Model.Task.Tasks">
            <summary>
            Gets the list of sub tasks for this task
            </summary>
        </member>
        <member name="T:DonPavlik.Domain.RegEXPatterns">
            <summary>
            Regular expression patterns class definition
            </summary>
        </member>
        <member name="M:DonPavlik.Domain.RegEXPatterns.MatchFound(System.String,System.String)">
            <summary>
            Matches the found.
            </summary>
            <param name="searchString">The search string.</param>
            <param name="regExPattern">The reg ex pattern.</param>
            <returns></returns>
        </member>
    </members>
</doc>
